/*
COLORS:
*/
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

/* Root font size is determined in the HTML
Setting root font size to 10px just makes calulations easier
*/

 /* 
 REM - always based on root font size
 EM - Sized based relative to parent element  
 */

 /* 
 ACCESSABILITY FONT-SIZE SETTING BEST PRACTICES 
 - sometimes a user will set their default browser font size to
 something else besides 16px.  By setting our root HTML font-size
 to 62.5%, we wont be overriding their decision to change their font 
 size.  This is way more flexible and allows for better accessiblity.
 We want our root to be 10px.  
 Default is 16px.
 If we divide 16 by 10 we get 62.5%.  By establishing our root setting to 
 62.5% will allow users to set their default font sizes while maintaining 
 the original look and feel of the website or app.
 10/16 = 62.5%
 */

/* RESETTING STYLES MANUALLY */
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* 
  box-sizing is not an inherited propery 
  so we declare it in the body and then make it an inherited property here.
  */
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 1.5rem;
  box-sizing: border-box;
}

.header {
  position: relative;
  height: 95vh;
  background-image: linear-gradient(
    to right bottom,
    rgba($color-primary-light, 0.8), rgba($color-primary-dark, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  &__logo {
    height: 3.5rem;
  }

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  /* gets rid of any upward shakiness that may happen with the animations in h1 element */
  -webkit-backface-visibility: hidden;
  margin-bottom: 4rem;

  &--main {
    display: block;
    font-size: 5rem;
    font-weight: 400;
    letter-spacing: 3rem;
  
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
  }
  
  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1rem;
    animation: moveInRight 1s ease-out;
  }
}



@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  60% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);

  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  60% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translateX(0);

  }
}

@keyframes moveBtnUp {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);

  }
}

.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1rem 3rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .3s;
  }
  
  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
  }
  
  &:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black, 0.2);
  
  }
  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
  }
  
  &--animated {
    animation: moveBtnUp .5s ease-out .75s;
    animation-fill-mode: backwards;
  }
}



