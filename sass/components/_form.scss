.form {

  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    font-size: 1.5rem;
    // Inputs do not inherit font styles, by default
    font-family: inherit;
    color: inherit;
    padding: 1.5rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, .5);
    border: none;
    // This keeps the imput element from 'jumping' when you focus
    // because of the added bottom border
    border-bottom: 3px solid transparent;
    width: 90%;
    display: block;
    transition: all .3s;

    @include respond(tab-port) {
      width: 100%;
    }

    &:focus {
      outline: none;
      box-shadow: 0 1rem 2rem rgba($color-black, .1);
      border-bottom: 3px solid $color-primary;
    }
    // By using the HTML5 input-type, we have access to the 'valid' 'invalid' pseudo-classes and can watch for them
    &:focus:invalid {
      border-bottom: 3px solid $color-secondary-dark;
    }

    &::-webkit-input-placeholder {
      color: $color-grey-dark-2;
    }
  }

  &__label {
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: .7rem;
    display: block;
    transition: all .3s;
  }

  // We are using the adjacent selector between the input and the label
  // When the placeholder is shown, the label dissappears 
  // When the user starts typing, the label is shown w/ transition
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden;
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 49%;
    display: inline-block;

    @include respond(tab-port) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    font-size: $default-font-size;
    cursor: pointer;
    position: relative;
    padding-left: 4.5rem;
  }

  &__radio-button {
    height: 3rem;
    width: 3rem;
    border: 5px solid $color-primary;
    border-radius: 50%;
    display: inline-block;
    position: absolute;
    left: 0;
    top: -.4rem;
    

    &::after {
      content: '';
      display: block;
      border-radius: 50%;
      width: 1.3rem;
      height: 1.3rem;
      @include absCenter;
      background-color: $color-primary;
      opacity: 0;
      transition: opacity .2s;
    }
  }

  // Whatch for the input to be checked,
  // Grab the radio-label using the adjacent selector and then the child's 'radio-button'::after pseudo element
  &__radio-input:checked ~ &__radio-label &__radio-button::after {
    opacity: 1;
  }
}